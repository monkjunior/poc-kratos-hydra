version: '3.7'

services:

  oathkeeper:
    image: oryd/oathkeeper:v0.38
    depends_on:
      - kratos
      - hydra
      - ui
      - api
      - authctl
    ports:
      - 4455:4455 # Reverse proxy port
      - 4456:4456 # Oathkeeper API port
    command:
      serve proxy -c "/etc/config/oathkeeper/oathkeeper.yml"
    environment:
      - LOG_LEVEL=debug
      - LOG_LEAK_SENSITIVE_VALUES=true
    restart: on-failure
    networks:
      - intranet
    volumes:
      - ./config/oathkeeper:/etc/config/oathkeeper

  ui:
    depends_on:
      - hydra
      - kratos
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - 4436
    command:
      authctl --config /etc/config/config.json mock ui
    volumes:
      - type: bind
        source: ./config.json
        target: /etc/config/config.json
    networks:
      - intranet

  authctl:
    depends_on:
      - hydra
      - kratos
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - 4435
    command:
      authctl --config /etc/config/config.json serve
    volumes:
      - type: bind
        source: ./config.json
        target: /etc/config/config.json
    networks:
      - intranet
  # Register an OAuth2 client with hydra
  authctl-init:
    depends_on:
      - oathkeeper
    build:
      context: .
      dockerfile: Dockerfile
    command:
      authctl --config /etc/config/config.json oauth2 create-client
    volumes:
      - type: bind
        source: ./config.json
        target: /etc/config/config.json
    networks:
      - intranet

  api:
    depends_on:
      - hydra
      - kratos
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - 4437
    command:
      authctl --config /etc/config/config.json mock api
    volumes:
      - type: bind
        source: ./config.json
        target: /etc/config/config.json
    networks:
      - intranet

  kratos:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v0.7.3-alpha.1
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    restart: unless-stopped
    environment:
      - DSN=postgres://kratos:secret@postgresd:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
      - SERVE_PUBLIC_BASE_URL=http://127.0.0.1:4455/.ory/kratos/public/
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - type: bind
        source: ./config/kratos/email-password
        target: /etc/config/kratos
    networks:
      - intranet

  kratos-migrate:
    image: oryd/kratos:v0.7.3-alpha.1
    environment:
      - DSN=postgres://kratos:secret@postgresd:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - type: bind
        source: ./config/kratos/email-password
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet

  hydra:
    image: oryd/hydra:v1.10.6
    depends_on:
      - hydra-migrate
#      - jaeger
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
      - "5555:5555" # Port for hydra token user
    command:
      serve all --dangerous-force-http
    restart: on-failure # TODO figure out why we need this (incorporate health check into hydra migrate command?)
    environment:
      - LOG_LEAK_SENSITIVE_VALUES=true
      - URLS_SELF_ISSUER=http://127.0.0.1:4444
      - URLS_SELF_PUBLIC=http://127.0.0.1:4444
      - URLS_CONSENT=http://127.0.0.1:4455/auth/hydra/consent
      - URLS_LOGIN=http://127.0.0.1:4455/auth/hydra/login
      - URLS_LOGOUT=http://127.0.0.1:4455/logout
      - SECRETS_SYSTEM=youReallyNeedToChangeThis
      - OIDC_SUBJECT_IDENTIFIERS_SUPPORTED_TYPES=public,pairwise
      - OIDC_SUBJECT_IDENTIFIERS_PAIRWISE_SALT=youReallyNeedToChangeThis
      # Adding custom claims top-level to the Access Token
      # https://www.ory.sh/hydra/docs/advanced/#adding-custom-claims-top-level-to-the-access-token
      # - OAUTH2_ALLOWED_TOP_LEVEL_CLAIMS=user_uuid,email
      - DSN=postgres://hydra:secret@postgres_hydra:5432/hydra?sslmode=disable&max_conns=20&max_idle_conns=4
### Jaeger ###
# Instruction: https://www.ory.sh/hydra/docs/guides/tracing/ #
#      - TRACING_PROVIDER=jaeger
#      - TRACING_PROVIDERS_JAEGER_SAMPLING_SERVER_URL=http://jaeger:5778/sampling
#      - TRACING_PROVIDERS_JAEGER_LOCAL_AGENT_ADDRESS=jaeger:6831
#      - TRACING_PROVIDERS_JAEGER_SAMPLING_TYPE=const
#      - TRACING_PROVIDERS_JAEGER_SAMPLING_VALUE=1
    networks:
      - intranet

  hydra-migrate:
    image: oryd/hydra:v1.10.6
    environment:
      - DSN=postgres://hydra:secret@postgres_hydra:5432/hydra?sslmode=disable&max_conns=20&max_idle_conns=4
    command:
      migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet

  # Database for Hydra
  postgres_hydra:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=hydra
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=hydra
    networks:
      - intranet
  # Database for Kratos
  postgresd:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=kratos
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=kratos
    networks:
      - intranet

  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports:
      - '4436:4436'
      - '4437:4437'
    networks:
      - intranet
#   Tracing tool for Hydra
#  jaeger:
#    image: jaegertracing/all-in-one:1.19.2
#    ports:
#      - "16686:16686" # The UI port
#    networks:
#      - intranet

networks:
  intranet:
